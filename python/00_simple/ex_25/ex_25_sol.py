"""
На входе одномерный массив A (индексация начинается с нуля) случайных положительных целых чисел.
Массив состоит из массив из N (N >= 1) целых положительных чисел.
Числа в массиве могут повторяться.

Трансформация S массива A происходит так:
    0. Выходной массив/список B исходно пуст.
    1. Организуем 1-й цикл для i, начиная с 0 и до длины массива A минус 1.
    2. Организуем внутри 1-го цикла второй, для j, начиная с 0 и до длины массива A минус i минус 1.
    3. Рассчитываем значение k = i + j.
    4. Из поддиапазона A[ j..k ] выбираем максимальное значение и записываем в конец списка B.
Таким образом, реализуется функция S(A), которая возвращает список B.

'Ключевой ключ' - это сумма всех элементов списка, получаемого двойной трансформацией S(S(A)).
Т.е. результат первой трансформации подаётся на вход второй трансформации.

Задача: написать функцию, которая находит 'ключевой ключ' и возвращает True, если он чётный.
"""

def transform(data):
    """ Реализация алгоритма обработки массива данных (трансформации) с заданием. """
    output = []
    for i, _ in enumerate(data):
        if i == len(data)-1:
            output.append(data[i])
        else:
            for j in range(0, len(data)-i-1):
                k = i + j
                output.append(max(data[j:k+1]))
    return output

def double_transform(data):
    """Функция выводит результат двойной трасформации исходного массива."""
    return transform(transform(data))

def get_master_key(data):
    """Функция выводит значение 'ключевого ключа'"""
    master_key = 0
    for i in double_transform(data):
        master_key += i
    return master_key
